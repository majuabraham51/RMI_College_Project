/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.edw.main;

import com.edw.rmi.ClientInfo;
import com.edw.rmi.ClientInterface;
import com.edw.rmi.MessageImpl;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;

/**
 *
 * @author Maju
 */
public class Training_Home extends javax.swing.JFrame {

    /**
     * Creates new form Training_Home
     */
    int i = 0;
    Vector<Integer> v = new Vector<Integer>();
    JDialog oo = new JDialog();
    Vector<String> ss;
    public static String msg;
    Chat_window ssx = new Chat_window();
   

    public Training_Home() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Zierinitialen", 1, 18)); // NOI18N
        jLabel1.setText("Training Home Page");

        jButton1.setText("GroupChat");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Client_sys_Monitoring");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setText("Allow Resources  to All");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("REmove resources");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Turn off All");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton3.setText("List Connected n/W");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        jList2.setModel(new javax.swing.AbstractListModel() {
            String[] strings = {  };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jList2);

        jLabel2.setText("Total Process:");

        jButton7.setText("Refresh");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Turn OFF");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(169, 169, 169)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3)
                            .addComponent(jButton1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jButton8)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButton7)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton3)
                                .addGap(28, 28, 28)
                                .addComponent(jButton1)
                                .addGap(141, 141, 141)
                                .addComponent(jButton8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jButton2)))))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton7))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            // TODO add your handling code here:
            MessageImpl imp = new MessageImpl();

            if (!imp.ChatOn.get()) {
                jButton1.setText("Close");


                ssx.show();
                imp.ChatOn.set(true);
            } else {
                jButton1.setText("StartChat");
                imp.ChatOn.set(false);
                ssx.dispose();




                // Resume   




            }



//            
//            String firstchat = "first";
//          
//            imp.chat_widw = firstchat;
//            Chat_window ss = new Chat_window();
//            ss.show();
        } catch (RemoteException ex) {
            Logger.getLogger(Training_Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        msg = jList1.getSelectedValue().toString();
        System.out.println("selected ip is " + msg);

        doTestClient(msg);


    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            // TODO add your handling code here:
            final MessageImpl imp = new MessageImpl();
            Thread b;

//                for(ClientInfo l :imp.clientList)
//                {   
//                    v.add(l.name);
//                   
//                     
//                    System.out.println(l.name);
//                    System.out.println(l.ip);
//                }
//                 jList1.setListData(v);


            Runnable cv = new Runnable() {

                @Override
                public void run() {
                    v.add(0);
                    Iterator it;


                    // boolean blnFound = ss.contains("two  3");
                    //System.out.println("Does Vector contain 3 ? " + blnFound);

                    JDialog kk = new JDialog();
                    //jList1.setListData(s);
                    while (true) {
                        ss = new Vector<String>();

                        // Vector<String> s = new Vector<String>();
                        ss.add("");
                        System.out.println("Entering While loop");
                        
                        
                        ArrayList lll = MessageImpl.clientList;
                        int size = lll.size();

                        //System.out.println(" before removing Size " + imp.clientList.size());
                        for (int i = 0; i < size; i++) {
                            ClientInfo l = (ClientInfo) lll.get(i);


                            boolean chh = ifexist(l.name);


                            if (chh == false) {
                                MessageImpl.clientList.remove(i);
                                kk.setTitle(l.name + " disconnected");

                                kk.show();
                                System.out.println("Clint disconnected Exception");


                            } else {
                                System.out.println("Clint still connected");
                            }
                            size = lll.size();

                        }

                        for (ClientInfo l : MessageImpl.clientList) {

                            boolean bl = ss.contains(l.name);
                            if (bl == false) {
                                ss.add(l.name);
                                //System.out.println(" Orginal Size"+imp.clientList.size());
                            }

                            // ss.add(l.name);


                        }

                        jList1.setListData(ss);
                        jList1.revalidate();


                        for (i = 0; i < 200000; i++) {
                            for (int j = 0; j < 20000; j++);
                        }



                    }

                }
            };
            b = new Thread(cv);
            b.start();




            //jList1.revalidate();



        } catch (Exception ex) {
            System.out.println(" thred catch " + ex.getMessage());

            Logger.getLogger(Training_Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            String vf=jList2.getSelectedValue().toString();
            MessageImpl imp = new MessageImpl();
            imp.vvvk=vf;
         
           
        } catch (RemoteException ex) {
            Logger.getLogger(Training_Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        
               
       
        
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        
         try {
            // TODO add your handling code here:
             Process pr = Runtime.getRuntime().exec("tasklist");
             BufferedReader oldbr =
                    new BufferedReader(new InputStreamReader(pr.getInputStream()));
             Vector v_old1 = new Vector<String>();
                String oldP = "";
                 while ((oldP = oldbr.readLine()) != null) {
                
                String OldExeee = getProcessName(oldP);
                
                
                
                v_old1.add(OldExeee);
                 }
                
                
                 
                   jList2.setListData(v_old1);
            
             
        } catch (Exception ex) {
            Logger.getLogger(Training_Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        
        
        try {
            String vf=jList2.getSelectedValue().toString();
            MessageImpl imp = new MessageImpl();
            imp.vvvk=vf;
            
           
        } catch (RemoteException ex) {
            Logger.getLogger(Training_Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        try {
          
            MessageImpl imp = new MessageImpl();
           
           imp.cc="Turnnofpc";
        } catch (RemoteException ex) {
            Logger.getLogger(Training_Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        try {
            // TODO add your handling code here:
            String iii=jList1.getSelectedValue().toString();
            Registry myRegistry1 = LocateRegistry.getRegistry(iii, 9001);
              
                // search for myMessage service
                ClientInterface impl = (ClientInterface) myRegistry1.lookup("myClientMessage");
                
                impl.messg("TUrnOFFNOW",iii);
        }
        
        catch (Exception ex) {
            Logger.getLogger(Training_Home.class.getName()).log(Level.SEVERE, null, ex);
        }

        
        
        
    }//GEN-LAST:event_jButton8ActionPerformed
//    private boolean checkvectorlist()
//    {
//        for (ClientInfo l : MessageImpl.clientList)
//        {
//            if(ss.contains(l.name))
//            {
//            return  false;
//            }
//            else
//            {
//                return true;
//            }
//        } 
//        v
//    }
   
    public String getProcessName(String sp) {
        String result = "";
        String[] splist = sp.split(" ");
        for (String s : splist) {
            if (s.endsWith(".exe") || s.endsWith(".EXE") ) {
                
                    
                result = s;
            }
        }

        return result;
    }

    private boolean ifexist(String ip) {
        try {
            Registry myRegistry1 = LocateRegistry.getRegistry(ip, 9001);
            System.out.println("============Message Sent from new server ");
            // search for myMessage service
            ClientInterface impl = (ClientInterface) myRegistry1.lookup("myClientMessage");

            return true;

        } catch (Exception ex) {
            //Logger.getLogger(Training_Home.class.getName()).log(Level.SEVERE, null, ex);
            return false;
        }

    }

    private void doTestClient(String xx) {
        try {
            // fire to localhost port 1099
            Registry myRegistry1 = LocateRegistry.getRegistry(xx, 9001);
            System.out.println("============Message Sent from new server ");
            // search for myMessage service
            ClientInterface impl = (ClientInterface) myRegistry1.lookup("myClientMessage");

            // call server's method	


            String msggg = "i wanna check new sever Act as Client";
            impl.messg(msggg);
            //TrainingSession obt = new TrainingSession(impl);

            System.out.println("============Message Sent from new server ");
        } catch (Exception e) {
            oo.setTitle("From training home" + e.getMessage());
            oo.show();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Training_Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Training_Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Training_Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Training_Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Training_Home().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList jList1;
    private javax.swing.JList jList2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
